<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>

    <groupId>br.com.peruchi</groupId>
    <artifactId>fisiovita</artifactId>

    <properties>
        <downloadSources>true</downloadSources>
        <appengine.app.version>1</appengine.app.version>
        <appengine.target.version>1.8.2</appengine.target.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <org.springframework.version>3.2.3.RELEASE</org.springframework.version>
        <workspace_loc>$${workspace_loc:/</workspace_loc>
    </properties>

    <dependencies>
    
        <!-- Compile/runtime dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
			<groupId>com.googlecode.objectify-appengine-spring</groupId>
			<artifactId>objectify-appengine-spring</artifactId>
			<version>1.1.1</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
            <groupId>com.googlecode.objectify</groupId>
            <artifactId>objectify</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.0.9</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>4.1.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${appengine.target.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>
        
        <!-- Provided dependencies -->

        <!-- Test Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${appengine.target.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${appengine.target.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <configuration>
                    <additionalProjectnatures combine.children="append">
                        <!-- Configura que é um projeto do GAE. -->
                        <projectnature>
                            com.google.appengine.eclipse.core.gaeNature</projectnature>
                    </additionalProjectnatures>
                    <classpathContainers combine.children="append">
                        <!-- Adiciona no classpath as bibliotecas do plugin do GAE. -->
                        <classpathContainer>
                            com.google.appengine.eclipse.core.GAE_CONTAINER</classpathContainer>
                    </classpathContainers>
                    <additionalConfig combine.children="append">
                        <!-- Arquivo de configuração do plugin do GAE indicando onde fica o 
                            WAR do projeto. -->
                        <file>
                            <name>
                                .settings/com.google.gdt.eclipse.core.prefs</name>
                            <content><![CDATA[
                                    eclipse.preferences.version=1
                                    jarsExcludedFromWebInfLib=
                                    warSrcDir=target/${project.artifactId}-${project.version}
                                    warSrcDirIsOutput=true
                             ]]></content>
                        </file>
                        <!-- Arquivo de configuração para o hotdeploy de conteúdo WEB. Reparar 
                            que é necessário que a propriedade ${workspace_loc} tenha o valor '${workspace_loc:/'. 
                            Isto é necessário por causa da maneira diferente que maven 2 e 3 fazem o 
                            parsing da propriedade. -->
                        <file>
                            <name>
                                .externalToolBuilders\webapp-hotdeploy.launch</name>
                            <content><![CDATA[
                                    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
                                    <launchConfiguration type="org.eclipse.ant.AntBuilderLaunchConfigurationType">
                                    <booleanAttribute key="org.eclipse.ant.ui.ATTR_TARGETS_UPDATED" value="true" />
                                    <booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false" />
                                    <booleanAttribute key="org.eclipse.debug.core.capture_output" value="false" />
                                    <booleanAttribute key="org.eclipse.debug.ui.ATTR_CONSOLE_OUTPUT_ON" value="false" />
                                    <booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false" />
                                    <stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider" />
                                    <booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="true" />
                                    <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="${project.artifactId}" />
                                    <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc}${project.artifactId}/.externalToolBuilders/webapp-hotdeploy.xml}" />
                                    <stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value="full,incremental,auto," />
                                    <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true" />
                                    <stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc}${project.artifactId}/src/main}" />
                                    </launchConfiguration>
                            ]]></content>
                        </file>
                        <!-- Script Ant que copia o conteúdo WEB da pasta 'webapp' para o target, 
                            para realizar o hotdeploy. São copiados apenas os arquivos mais novos. -->
                        <file>
                            <name>
                                .externalToolBuilders\webapp-hotdeploy.xml</name>
                            <content><![CDATA[
                                    <?xml version="1.0"?>
                                    <project default="copyWebapp" basedir="..">
                                    <target name="copyWebapp">
                                    <copy todir="../../target/${project.artifactId}-${project.version}">
                                    <fileset dir="webapp" />
                                    </copy>
                                    </target>
                                    </project>
                            ]]></content>
                        </file>
                    </additionalConfig>
                    <additionalBuildcommands combine.children="append">
                        <!-- Adiciona a copia do conteúdo WEB (hotdeploy) como uma build do 
                            projeto. Ele rodará sempre que for salvo um arquivo, desde que a build automática 
                            esteja ativada. -->
                        <buildCommand>
                            <name>
                                org.eclipse.ui.externaltools.ExternalToolBuilder</name>
                            <triggers>full,incremental,auto,</triggers>
                            <arguments>
                                <LaunchConfigHandle>
                                    &lt;project&gt;/.externalToolBuilders/webapp-hotdeploy.launch</LaunchConfigHandle>
                            </arguments>
                        </buildCommand>
                    </additionalBuildcommands>
                    <!-- Exclui do classpath do eclipse a SDK que o maven usa para a compilação 
                        e empacotamento. Está entrada no classpath que causa o uso da SDK errada 
                        no Eclipse após rodar um 'mvn eclipse:eclipse' -->
                    <excludes>
                        <exclude>com.google.appengine:appengine-api-1.0-sdk</exclude>
                        <exclude>com.google.appengine:appengine-tools-sdk</exclude>
                    </excludes>
                    <!-- Configura o local do código compilado para o mesmo local que o 
                        plugin do GAE aponta. -->
                    <buildOutputDirectory>
                        target/${project.artifactId}-${project.version}/WEB-INF/classes</buildOutputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <version>2.3.2</version>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
					<manifest>
						<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
					</manifest>
                    <webResources>
                        <!-- in order to interpolate version from pom into appengine-web.xml -->
                        <resource>
                            <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.google.appengine</groupId>
                <artifactId>appengine-maven-plugin</artifactId>
                <version>${appengine.target.version}</version>
            </plugin>
        </plugins>
    </build>

</project>